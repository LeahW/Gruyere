/* Client-State Manipulation

 Problem: Elevation of Privilege
    The Edit Profile settings look at cookies to see if a login is an administrator. You can create a false cookie by visiting:
       http://google-gruyere.appspot.com/123/saveprofile?action=update&is_admin=True
    and then log out and back in to create a new cookie based on this browser history.
    Additonally, you can visit:
       http://google-gruyere.appspot.com/123/saveprofile?action=update&is_admin=True&uid=username
    to make ever user login an admin.
    
 Fix: Authorize access on the server-side at the time request is made. Don't leave it to the browser to toggle visibility.

 Problem: Cookie Manipulation
   On Gruyere, cookies look like hash|username|admin|author so you can gain access to the user account for Foo by logging in as 
   Foo|admin|author . This will create a hash of hash|foo|admin|author||author with the result of logging you in as Foo but with
   Administrator privileges.
   
 Fix: Restrict the characters that can be used in usernames. Use cookie-parsing that escapes usernames and rejects cookies that
    don't meet the expected pattern. Use a secure, cryptographic hash function and also encrypt cookie, don't use plain text.
    
  Additional exploit: There is a 16 character limit on the username, but it is imposed on the client side so can be bypassed:
    http://google-gruyere.appspot.com/123/saveprofile?action=new&uid=administrator|admin|author&pw=secret
  Fix this by implementing the 16 character limit on server side as well.
 */
