/* Path Traversal

  Problem: If the structure of website is known, you can manually type in URLs to get to hidden information. For example:
           /../     (or %2F..%2F in optimized browsers) will escape to the parent directory.
           In Gruyere, you can get to 'secret' text by traversing to:
           http://google-gruyere.appspot.com/922914398469%2F..%2Fsecret.txt
           
  Fix: Only accept requests for specific resources that you pre-determine either manually or through a crawl. Second best is
       to validate the final destination of URL, but hard to avoid encoding tricks.
       
  Problem: Data-tampering through Path Traversal. Through manipulation of data input that is entered into URL, you can overwrite
           the information that is already stored on a particular URL path. On Gruyere, you can overwrite above problem's target
           by logging in as user named .. and uploading a secret.txt
          
  Fix: Escape dangerous characters (.. is dangerous on Windows) and make case-insensitive. Better yet, assign use unique user id.
       instead in the URL.
       
  Problem: Denial of Service. URLs used for resetting the server, quitting services, etc. can be accessed by anyone. Examples:
            http://google-gruyere.appspot.com/922914398469/quitserver
            http://google-gruyere.appspot.com/922914398469/reset
            
  Fix: Add dangerous URLs to list of protected URLs. Make sure you change capitalization, etc. before security check.
  
  
*/
